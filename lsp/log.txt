Started server
Capabilities: Object {"completionProvider": Object {"completionItem": Object {"labelDetailsSupport": Bool(true)}, "resolveProvider": Bool(true), "triggerCharacters": Array [], "workDoneProgress": Bool(true)}, "definitionProvider": Bool(true), "diagnosticProvider": Object {"identifier": String("maple"), "interFileDependencies": Bool(true), "workDoneProgress": Bool(true), "workspaceDiagnostics": Bool(true)}, "documentFormattingProvider": Bool(true), "hoverProvider": Bool(true), "textDocumentSync": Number(1)}
Notification: Notification { method: "textDocument/didOpen", params: Object {"textDocument": Object {"languageId": String("maple"), "text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n"), "uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(0)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2836us
Request: Request { id: RequestId(I32(2)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(46)}, "start": Object {"character": Number(0), "line": Number(0)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(3)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2437us
Request: Request { id: RequestId(I32(4)), method: "textDocument/definition", params: Object {"position": Object {"character": Number(3), "line": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(5)), method: "textDocument/definition", params: Object {"position": Object {"character": Number(21), "line": Number(1)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(6)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2498us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\n\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(6)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4165us
Request: Request { id: RequestId(I32(7)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(91)}, "start": Object {"character": Number(0), "line": Number(45)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\np\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(7)}} }
Errors: [ReferenceError { name: "p", line: 89, char_start: 0, char_end: 1 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2502us
Request: Request { id: RequestId(I32(8)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(1), "line": Number(89)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(9)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(91)}, "start": Object {"character": Number(0), "line": Number(45)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\npr\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(8)}} }
Errors: [ReferenceError { name: "pr", line: 89, char_start: 0, char_end: 2 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2756us
Request: Request { id: RequestId(I32(10)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(91)}, "start": Object {"character": Number(0), "line": Number(45)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\npri\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(9)}} }
Errors: [ReferenceError { name: "pri", line: 89, char_start: 0, char_end: 3 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3357us
Request: Request { id: RequestId(I32(11)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(91)}, "start": Object {"character": Number(0), "line": Number(45)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprint\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(11)}} }
Errors: [ReferenceError { name: "print", line: 89, char_start: 0, char_end: 5 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3953us
Request: Request { id: RequestId(I32(12)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(91)}, "start": Object {"character": Number(0), "line": Number(45)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(12)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2342us
Request: Request { id: RequestId(I32(13)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(91)}, "start": Object {"character": Number(0), "line": Number(45)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(14)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2465us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\n\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(14)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3817us
Request: Request { id: RequestId(I32(15)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(46)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nw\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(15)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2655us
Request: Request { id: RequestId(I32(16)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(1), "line": Number(90)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(17)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(46)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nwhi\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(17)}} }
Errors: [ReferenceError { name: "whi", line: 90, char_start: 0, char_end: 3 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2786us
Request: Request { id: RequestId(I32(18)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(46)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nwhile\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(19)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 90, char_start: 5, char_end: 6 }", line: 92, token: Token { t: EndOfStatement, line: 90, char_start: 5, char_end: 6 } }
Update time: 1109us
Request: Request { id: RequestId(I32(19)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(46)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nwhile \n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(20)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 90, char_start: 6, char_end: 7 }", line: 92, token: Token { t: EndOfStatement, line: 90, char_start: 6, char_end: 7 } }
Update time: 1200us
Request: Request { id: RequestId(I32(20)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(46)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nwhile\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(21)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 90, char_start: 5, char_end: 6 }", line: 92, token: Token { t: EndOfStatement, line: 90, char_start: 5, char_end: 6 } }
Update time: 1479us
Request: Request { id: RequestId(I32(21)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(5), "line": Number(90)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(22)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(91)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nwhil\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(22)}} }
Errors: [ReferenceError { name: "whil", line: 90, char_start: 0, char_end: 4 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2824us
Request: Request { id: RequestId(I32(23)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nwhi\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(23)}} }
Errors: [ReferenceError { name: "whi", line: 90, char_start: 0, char_end: 3 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2908us
Request: Request { id: RequestId(I32(24)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nwh\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(24)}} }
Errors: [ReferenceError { name: "wh", line: 90, char_start: 0, char_end: 2 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2379us
Request: Request { id: RequestId(I32(25)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nw\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(25)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2655us
Request: Request { id: RequestId(I32(26)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\n\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(26)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2670us
Request: Request { id: RequestId(I32(27)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nv\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(27)}} }
Errors: [ReferenceError { name: "v", line: 90, char_start: 0, char_end: 1 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2732us
Request: Request { id: RequestId(I32(28)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(1), "line": Number(90)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(29)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nva\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(28)}} }
Errors: [ReferenceError { name: "va", line: 90, char_start: 0, char_end: 2 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2323us
Request: Request { id: RequestId(I32(30)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(29)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected identifier, got Token { t: EndOfStatement, line: 90, char_start: 3, char_end: 4 }", line: 92, token: Token { t: EndOfStatement, line: 90, char_start: 3, char_end: 4 } }
Update time: 928us
Request: Request { id: RequestId(I32(31)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar \n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(30)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected identifier, got Token { t: EndOfStatement, line: 90, char_start: 4, char_end: 5 }", line: 92, token: Token { t: EndOfStatement, line: 90, char_start: 4, char_end: 5 } }
Update time: 1356us
Request: Request { id: RequestId(I32(32)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(31)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2461us
Request: Request { id: RequestId(I32(33)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(9), "line": Number(90)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(34)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\n\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(32)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2390us
Request: Request { id: RequestId(I32(35)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(93)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(33)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2746us
Request: Request { id: RequestId(I32(36)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(95)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(37)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2545us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(35)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2525us
Request: Request { id: RequestId(I32(38)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(96)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    b\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(36)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2568us
Request: Request { id: RequestId(I32(39)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(5), "line": Number(92)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(40)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(96)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ba\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(37)}} }
Errors: [ReferenceError { name: "ba", line: 92, char_start: 4, char_end: 6 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2428us
Request: Request { id: RequestId(I32(41)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(96)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    bal\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(38)}} }
Errors: [ReferenceError { name: "bal", line: 92, char_start: 4, char_end: 7 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3023us
Request: Request { id: RequestId(I32(42)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(96)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ball\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(39)}} }
Errors: [ReferenceError { name: "ball", line: 92, char_start: 4, char_end: 8 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2777us
Request: Request { id: RequestId(I32(43)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(96)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(40)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2561us
Request: Request { id: RequestId(I32(44)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(28), "line": Number(92)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(45)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(96)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(41)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2697us
Request: Request { id: RequestId(I32(46)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(97)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(42)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2533us
Request: Request { id: RequestId(I32(47)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(28), "line": Number(93)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(48)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(97)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(49)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2464us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(44)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2722us
Request: Request { id: RequestId(I32(50)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(98)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    a\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(45)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2540us
Request: Request { id: RequestId(I32(51)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(5), "line": Number(94)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(52)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(98)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    ar\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(46)}} }
Errors: [ReferenceError { name: "ar", line: 94, char_start: 4, char_end: 6 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2776us
Request: Request { id: RequestId(I32(53)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(98)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    arr\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(47)}} }
Errors: [ReferenceError { name: "arr", line: 94, char_start: 4, char_end: 7 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2809us
Request: Request { id: RequestId(I32(54)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(98)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    arrs\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(48)}} }
Errors: [ReferenceError { name: "arrs", line: 94, char_start: 4, char_end: 8 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3331us
Request: Request { id: RequestId(I32(55)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(98)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    arr\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(49)}} }
Errors: [ReferenceError { name: "arr", line: 94, char_start: 4, char_end: 7 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2973us
Request: Request { id: RequestId(I32(56)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(98)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    arr2\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(50)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3302us
Request: Request { id: RequestId(I32(57)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(98)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(51)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2530us
Request: Request { id: RequestId(I32(58)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(98)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(59)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2521us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(53)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4201us
Request: Request { id: RequestId(I32(60)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(99)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    p\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(54)}} }
Errors: [ReferenceError { name: "p", line: 95, char_start: 4, char_end: 5 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2505us
Request: Request { id: RequestId(I32(61)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(5), "line": Number(95)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(62)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(99)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    pr\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(55)}} }
Errors: [ReferenceError { name: "pr", line: 95, char_start: 4, char_end: 6 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2419us
Request: Request { id: RequestId(I32(63)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(99)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    pri\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(56)}} }
Errors: [ReferenceError { name: "pri", line: 95, char_start: 4, char_end: 7 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3488us
Request: Request { id: RequestId(I32(64)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(99)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    print\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(58)}} }
Errors: [ReferenceError { name: "print", line: 95, char_start: 4, char_end: 9 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3212us
Request: Request { id: RequestId(I32(65)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(99)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\nvar i = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(59)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2551us
Request: Request { id: RequestId(I32(66)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(99)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(67)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3181us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(61)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2973us
Request: Request { id: RequestId(I32(68)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(99)}, "start": Object {"character": Number(0), "line": Number(53)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(69)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2758us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    \n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(63)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3026us
Request: Request { id: RequestId(I32(70)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(54)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n   \n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(64)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3977us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(68)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2551us
Request: Request { id: RequestId(I32(71)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(99)}, "start": Object {"character": Number(0), "line": Number(54)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(72)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(99)}, "start": Object {"character": Number(0), "line": Number(54)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(73)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2612us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    \n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(70)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3525us
Request: Request { id: RequestId(I32(74)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(54)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    i\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(71)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3061us
Request: Request { id: RequestId(I32(75)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(5), "line": Number(94)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(76)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(54)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(72)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 94, char_start: 6, char_end: 7 }", line: 96, token: Token { t: EndOfStatement, line: 94, char_start: 6, char_end: 7 } }
Update time: 780us
Request: Request { id: RequestId(I32(77)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(54)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if \n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(73)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 94, char_start: 7, char_end: 8 }", line: 96, token: Token { t: EndOfStatement, line: 94, char_start: 7, char_end: 8 } }
Update time: 914us
Request: Request { id: RequestId(I32(78)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(54)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if b\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(74)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"arr2\"), line: 95, char_start: 4, char_end: 8 }", line: 96, token: Token { t: Ident("arr2"), line: 95, char_start: 4, char_end: 8 } }
Update time: 1662us
Request: Request { id: RequestId(I32(79)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(8), "line": Number(94)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(80)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if \n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(75)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 94, char_start: 7, char_end: 8 }", line: 96, token: Token { t: EndOfStatement, line: 94, char_start: 7, char_end: 8 } }
Update time: 976us
Request: Request { id: RequestId(I32(81)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if i\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(76)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"arr2\"), line: 95, char_start: 4, char_end: 8 }", line: 96, token: Token { t: Ident("arr2"), line: 95, char_start: 4, char_end: 8 } }
Update time: 746us
Request: Request { id: RequestId(I32(82)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(8), "line": Number(94)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(83)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if is\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(77)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"arr2\"), line: 95, char_start: 4, char_end: 8 }", line: 96, token: Token { t: Ident("arr2"), line: 95, char_start: 4, char_end: 8 } }
Update time: 773us
Request: Request { id: RequestId(I32(84)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isO\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(78)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"arr2\"), line: 95, char_start: 4, char_end: 8 }", line: 96, token: Token { t: Ident("arr2"), line: 95, char_start: 4, char_end: 8 } }
Update time: 1609us
Request: Request { id: RequestId(I32(85)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOn\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(79)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"arr2\"), line: 95, char_start: 4, char_end: 8 }", line: 96, token: Token { t: Ident("arr2"), line: 95, char_start: 4, char_end: 8 } }
Update time: 945us
Request: Request { id: RequestId(I32(86)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnC\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(80)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"arr2\"), line: 95, char_start: 4, char_end: 8 }", line: 96, token: Token { t: Ident("arr2"), line: 95, char_start: 4, char_end: 8 } }
Update time: 1129us
Request: Request { id: RequestId(I32(87)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOn\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(81)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"arr2\"), line: 95, char_start: 4, char_end: 8 }", line: 96, token: Token { t: Ident("arr2"), line: 95, char_start: 4, char_end: 8 } }
Update time: 1087us
Request: Request { id: RequestId(I32(88)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnS\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(82)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"arr2\"), line: 95, char_start: 4, char_end: 8 }", line: 96, token: Token { t: Ident("arr2"), line: 95, char_start: 4, char_end: 8 } }
Update time: 1157us
Request: Request { id: RequestId(I32(89)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnSc\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(83)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"arr2\"), line: 95, char_start: 4, char_end: 8 }", line: 96, token: Token { t: Ident("arr2"), line: 95, char_start: 4, char_end: 8 } }
Update time: 1495us
Request: Request { id: RequestId(I32(90)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScr\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(84)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"arr2\"), line: 95, char_start: 4, char_end: 8 }", line: 96, token: Token { t: Ident("arr2"), line: 95, char_start: 4, char_end: 8 } }
Update time: 1457us
Request: Request { id: RequestId(I32(91)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScre\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(85)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"arr2\"), line: 95, char_start: 4, char_end: 8 }", line: 96, token: Token { t: Ident("arr2"), line: 95, char_start: 4, char_end: 8 } }
Update time: 1563us
Request: Request { id: RequestId(I32(92)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScree\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(86)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"arr2\"), line: 95, char_start: 4, char_end: 8 }", line: 96, token: Token { t: Ident("arr2"), line: 95, char_start: 4, char_end: 8 } }
Update time: 1304us
Request: Request { id: RequestId(I32(93)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(87)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"arr2\"), line: 95, char_start: 4, char_end: 8 }", line: 96, token: Token { t: Ident("arr2"), line: 95, char_start: 4, char_end: 8 } }
Update time: 891us
Request: Request { id: RequestId(I32(94)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(88)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 94, char_start: 18, char_end: 19 }", line: 96, token: Token { t: EndOfStatement, line: 94, char_start: 18, char_end: 19 } }
Update time: 1690us
Request: Request { id: RequestId(I32(95)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(b\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(89)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected comma or right paren, got Token { t: EndOfStatement, line: 94, char_start: 19, char_end: 20 } in function call", line: 96, token: Token { t: EndOfStatement, line: 94, char_start: 19, char_end: 20 } }
Update time: 1738us
Request: Request { id: RequestId(I32(96)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(19), "line": Number(94)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(97)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ba\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(90)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected comma or right paren, got Token { t: EndOfStatement, line: 94, char_start: 20, char_end: 21 } in function call", line: 96, token: Token { t: EndOfStatement, line: 94, char_start: 20, char_end: 21 } }
Update time: 1192us
Request: Request { id: RequestId(I32(98)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(bal\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(91)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected comma or right paren, got Token { t: EndOfStatement, line: 94, char_start: 21, char_end: 22 } in function call", line: 96, token: Token { t: EndOfStatement, line: 94, char_start: 21, char_end: 22 } }
Update time: 837us
Request: Request { id: RequestId(I32(99)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ball\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(92)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected comma or right paren, got Token { t: EndOfStatement, line: 94, char_start: 22, char_end: 23 } in function call", line: 96, token: Token { t: EndOfStatement, line: 94, char_start: 22, char_end: 23 } }
Update time: 1136us
Request: Request { id: RequestId(I32(100)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballP\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(93)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected comma or right paren, got Token { t: EndOfStatement, line: 94, char_start: 23, char_end: 24 } in function call", line: 96, token: Token { t: EndOfStatement, line: 94, char_start: 23, char_end: 24 } }
Update time: 1057us
Request: Request { id: RequestId(I32(101)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPo\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(94)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected comma or right paren, got Token { t: EndOfStatement, line: 94, char_start: 24, char_end: 25 } in function call", line: 96, token: Token { t: EndOfStatement, line: 94, char_start: 24, char_end: 25 } }
Update time: 1383us
Request: Request { id: RequestId(I32(102)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(95)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected comma or right paren, got Token { t: EndOfStatement, line: 94, char_start: 25, char_end: 26 } in function call", line: 96, token: Token { t: EndOfStatement, line: 94, char_start: 25, char_end: 26 } }
Update time: 1027us
Request: Request { id: RequestId(I32(103)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos)\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(96)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"arr2\"), line: 95, char_start: 4, char_end: 8 }", line: 96, token: Token { t: Ident("arr2"), line: 95, char_start: 4, char_end: 8 } }
Update time: 1494us
Request: Request { id: RequestId(I32(104)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) \n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(97)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"arr2\"), line: 95, char_start: 4, char_end: 8 }", line: 96, token: Token { t: Ident("arr2"), line: 95, char_start: 4, char_end: 8 } }
Update time: 1593us
Request: Request { id: RequestId(I32(105)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(98)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Unexpected EOF (aka unclosed brace)", line: 102, token: Token { t: EOF, line: 101, char_start: 0, char_end: 0 } }
Update time: 1492us
Request: Request { id: RequestId(I32(106)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(100)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(99)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Unexpected EOF (aka unclosed brace)", line: 103, token: Token { t: EOF, line: 102, char_start: 0, char_end: 0 } }
Update time: 1558us
Request: Request { id: RequestId(I32(107)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(101)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n    arr2[ballPos.x][ballPos.y] = \"O\"\n    printScreen(arr2)\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(100)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4356us
Request: Request { id: RequestId(I32(108)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(101)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(109)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(101)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3185us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2688us
Request: Request { id: RequestId(I32(110)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(101)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(111)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3151us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    \n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(103)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 10068us
Request: Request { id: RequestId(I32(112)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    l\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(104)}} }
Errors: [ReferenceError { name: "l", line: 92, char_start: 4, char_end: 5 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2712us
Request: Request { id: RequestId(I32(113)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(5), "line": Number(92)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(114)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    le\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(105)}} }
Errors: [ReferenceError { name: "le", line: 92, char_start: 4, char_end: 6 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2712us
Request: Request { id: RequestId(I32(115)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    let\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(106)}} }
Errors: [ReferenceError { name: "let", line: 92, char_start: 4, char_end: 7 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 4866us
Request: Request { id: RequestId(I32(116)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    let \n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(107)}} }
Errors: [ReferenceError { name: "let", line: 92, char_start: 4, char_end: 7 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3987us
Request: Request { id: RequestId(I32(117)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    let s\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(108)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected newline after statement \"let\", instead got Token { t: Ident(\"s\"), line: 92, char_start: 8, char_end: 9 }", line: 93, token: Token { t: Ident("s"), line: 92, char_start: 8, char_end: 9 } }
Update time: 872us
Request: Request { id: RequestId(I32(118)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(9), "line": Number(92)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(119)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    let st\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(109)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected newline after statement \"let\", instead got Token { t: Ident(\"st\"), line: 92, char_start: 8, char_end: 10 }", line: 93, token: Token { t: Ident("st"), line: 92, char_start: 8, char_end: 10 } }
Update time: 896us
Request: Request { id: RequestId(I32(120)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    let sta\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(110)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected newline after statement \"let\", instead got Token { t: Ident(\"sta\"), line: 92, char_start: 8, char_end: 11 }", line: 93, token: Token { t: Ident("sta"), line: 92, char_start: 8, char_end: 11 } }
Update time: 1002us
Request: Request { id: RequestId(I32(121)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    let star\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(111)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected newline after statement \"let\", instead got Token { t: Ident(\"star\"), line: 92, char_start: 8, char_end: 12 }", line: 93, token: Token { t: Ident("star"), line: 92, char_start: 8, char_end: 12 } }
Update time: 1319us
Request: Request { id: RequestId(I32(122)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    let sta\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(112)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected newline after statement \"let\", instead got Token { t: Ident(\"sta\"), line: 92, char_start: 8, char_end: 11 }", line: 93, token: Token { t: Ident("sta"), line: 92, char_start: 8, char_end: 11 } }
Update time: 1047us
Request: Request { id: RequestId(I32(123)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    let st\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(113)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected newline after statement \"let\", instead got Token { t: Ident(\"st\"), line: 92, char_start: 8, char_end: 10 }", line: 93, token: Token { t: Ident("st"), line: 92, char_start: 8, char_end: 10 } }
Update time: 1298us
Request: Request { id: RequestId(I32(124)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    let\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(116)}} }
Errors: [ReferenceError { name: "let", line: 92, char_start: 4, char_end: 7 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3210us
Request: Request { id: RequestId(I32(125)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(7), "line": Number(92)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(126)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    le\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(117)}} }
Errors: [ReferenceError { name: "le", line: 92, char_start: 4, char_end: 6 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3211us
Request: Request { id: RequestId(I32(127)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    l\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(118)}} }
Errors: [ReferenceError { name: "l", line: 92, char_start: 4, char_end: 5 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2556us
Request: Request { id: RequestId(I32(128)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    \n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(119)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2614us
Request: Request { id: RequestId(I32(129)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    v\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(120)}} }
Errors: [ReferenceError { name: "v", line: 92, char_start: 4, char_end: 5 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3947us
Request: Request { id: RequestId(I32(130)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(5), "line": Number(92)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(131)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    va\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(121)}} }
Errors: [ReferenceError { name: "va", line: 92, char_start: 4, char_end: 6 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2766us
Request: Request { id: RequestId(I32(132)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(122)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected identifier, got Token { t: EndOfStatement, line: 92, char_start: 7, char_end: 8 }", line: 94, token: Token { t: EndOfStatement, line: 92, char_start: 7, char_end: 8 } }
Update time: 1092us
Request: Request { id: RequestId(I32(133)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var \n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(123)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected identifier, got Token { t: EndOfStatement, line: 92, char_start: 8, char_end: 9 }", line: 94, token: Token { t: EndOfStatement, line: 92, char_start: 8, char_end: 9 } }
Update time: 872us
Request: Request { id: RequestId(I32(134)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var s\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(124)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3534us
Request: Request { id: RequestId(I32(135)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(9), "line": Number(92)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(136)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var st\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(125)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2904us
Request: Request { id: RequestId(I32(137)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var sta\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(126)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3502us
Request: Request { id: RequestId(I32(138)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var star\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(127)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2738us
Request: Request { id: RequestId(I32(139)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var start\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(128)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4083us
Request: Request { id: RequestId(I32(140)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startT\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(129)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2848us
Request: Request { id: RequestId(I32(141)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTim\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(131)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2975us
Request: Request { id: RequestId(I32(142)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(132)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2517us
Request: Request { id: RequestId(I32(143)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(133)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2765us
Request: Request { id: RequestId(I32(144)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(145)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2752us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(135)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3342us
Request: Request { id: RequestId(I32(146)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    w\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(136)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3642us
Request: Request { id: RequestId(I32(147)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(5), "line": Number(99)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(148)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    wh\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(137)}} }
Errors: [ReferenceError { name: "wh", line: 99, char_start: 4, char_end: 6 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3244us
Request: Request { id: RequestId(I32(149)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(139)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 99, char_start: 9, char_end: 10 }", line: 101, token: Token { t: EndOfStatement, line: 99, char_start: 9, char_end: 10 } }
Update time: 964us
Request: Request { id: RequestId(I32(150)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n        // do nothing\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(140)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2876us
Request: Request { id: RequestId(I32(151)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(105)}, "start": Object {"character": Number(0), "line": Number(59)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(152)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n    // do nothing\n    \n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(141)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2957us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2975us
Request: Request { id: RequestId(I32(153)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(60)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n    // do nothing\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(143)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3051us
Request: Request { id: RequestId(I32(154)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(105)}, "start": Object {"character": Number(0), "line": Number(60)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(155)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n    // do nothing\n    \n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(144)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3002us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2896us
Request: Request { id: RequestId(I32(156)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(60)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(157)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n// do nothing\n\n    \n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(146)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3007us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3026us
Request: Request { id: RequestId(I32(158)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(159)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n// do nothing\n\n\n    \n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(148)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3270us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3263us
Request: Request { id: RequestId(I32(160)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(108)}, "start": Object {"character": Number(0), "line": Number(62)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(161)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n// do nothing\n\n\n\n    \n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(150)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3286us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3156us
Request: Request { id: RequestId(I32(162)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(109)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n// do nothing\n\n\n    \n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(152)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3012us
Request: Request { id: RequestId(I32(163)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(108)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n// do nothing\n\n    \n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(154)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3390us
Request: Request { id: RequestId(I32(164)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n    // do nothing\n    \n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(156)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3959us
Request: Request { id: RequestId(I32(165)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n    // do nothing\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(158)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3110us
Request: Request { id: RequestId(I32(166)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(105)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n    // do nothing\n    \n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(160)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 6271us
Request: Request { id: RequestId(I32(167)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n    // do nothing\n    v\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(161)}} }
Errors: [ReferenceError { name: "v", line: 101, char_start: 4, char_end: 5 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3111us
Request: Request { id: RequestId(I32(168)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(5), "line": Number(101)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(169)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n    // do nothing\n    va\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(162)}} }
Errors: [ReferenceError { name: "va", line: 101, char_start: 4, char_end: 6 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3394us
Request: Request { id: RequestId(I32(170)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n    // do nothing\n    var\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(163)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected identifier, got Token { t: EndOfStatement, line: 101, char_start: 7, char_end: 8 }", line: 103, token: Token { t: EndOfStatement, line: 101, char_start: 7, char_end: 8 } }
Update time: 1015us
Request: Request { id: RequestId(I32(171)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n    // do nothing\n    var \n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(164)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected identifier, got Token { t: EndOfStatement, line: 101, char_start: 8, char_end: 9 }", line: 103, token: Token { t: EndOfStatement, line: 101, char_start: 8, char_end: 9 } }
Update time: 1011us
Request: Request { id: RequestId(I32(172)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n    // do nothing\n    var x\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(165)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3147us
Request: Request { id: RequestId(I32(173)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(9), "line": Number(101)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(174)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n    // do nothing\n    var x \n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(166)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3215us
Request: Request { id: RequestId(I32(175)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n    // do nothing\n    var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(167)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3582us
Request: Request { id: RequestId(I32(176)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(13), "line": Number(101)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(177)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(178)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(168)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2811us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3035us
Request: Request { id: RequestId(I32(179)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(170)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3834us
Request: Request { id: RequestId(I32(180)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 10000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(171)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2913us
Request: Request { id: RequestId(I32(181)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(172)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3078us
Request: Request { id: RequestId(I32(182)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(173)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3090us
Request: Request { id: RequestId(I32(183)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(184)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2932us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime <  {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(175)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected identifier, got Token { t: Var, line: 101, char_start: 8, char_end: 11 } in object literal", line: 102, token: Token { t: Var, line: 101, char_start: 8, char_end: 11 } }
Update time: 1008us
Request: Request { id: RequestId(I32(185)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 1 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(176)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3677us
Request: Request { id: RequestId(I32(186)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(42), "line": Number(99)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(187)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(177)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3190us
Request: Request { id: RequestId(I32(188)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 100 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(178)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3019us
Request: Request { id: RequestId(I32(189)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 1000 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(179)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3315us
Request: Request { id: RequestId(I32(190)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(180)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3792us
Request: Request { id: RequestId(I32(191)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 100000 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(181)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4166us
Request: Request { id: RequestId(I32(192)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 1000000 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(182)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4108us
Request: Request { id: RequestId(I32(193)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(183)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3547us
Request: Request { id: RequestId(I32(194)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 100000000 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(184)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4336us
Request: Request { id: RequestId(I32(195)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 1000000000 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(185)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4367us
Request: Request { id: RequestId(I32(196)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 100000000 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(186)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3250us
Request: Request { id: RequestId(I32(197)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 10000000 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(187)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4275us
Request: Request { id: RequestId(I32(198)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(199)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2906us
Request: Request { id: RequestId(I32(200)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3204us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 100000000 {\n        // do nothing\n        var x = 1\n    }\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(189)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4882us
Request: Request { id: RequestId(I32(201)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(49), "line": Number(99)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(202)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(106)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(203)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2942us
Request: Request { id: RequestId(I32(204)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3017us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    while std.time.nanos() - startTime < 100000000 {\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(191)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Unexpected EOF (aka unclosed brace)", line: 105, token: Token { t: EOF, line: 104, char_start: 0, char_end: 0 } }
Update time: 1786us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    \n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(192)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2866us
Request: Request { id: RequestId(I32(205)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(206)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    s\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(193)}} }
Errors: [ReferenceError { name: "s", line: 99, char_start: 4, char_end: 5 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3617us
Request: Request { id: RequestId(I32(207)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(5), "line": Number(99)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(208)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    st\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(194)}} }
Errors: [ReferenceError { name: "st", line: 99, char_start: 4, char_end: 6 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3073us
Request: Request { id: RequestId(I32(209)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(195)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3268us
Request: Request { id: RequestId(I32(210)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(196)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected identifier, got Token { t: EndOfStatement, line: 99, char_start: 8, char_end: 9 } on right side of '.'", line: 101, token: Token { t: EndOfStatement, line: 99, char_start: 8, char_end: 9 } }
Update time: 1457us
Request: Request { id: RequestId(I32(211)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.t\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(197)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2680us
Request: Request { id: RequestId(I32(212)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(9), "line": Number(99)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(213)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.ti\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(198)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2852us
Request: Request { id: RequestId(I32(214)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(200)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2800us
Request: Request { id: RequestId(I32(215)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(201)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected identifier, got Token { t: EndOfStatement, line: 99, char_start: 13, char_end: 14 } on right side of '.'", line: 101, token: Token { t: EndOfStatement, line: 99, char_start: 13, char_end: 14 } }
Update time: 1194us
Request: Request { id: RequestId(I32(216)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.s\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(202)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3483us
Request: Request { id: RequestId(I32(217)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(14), "line": Number(99)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(218)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.sl\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(203)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3241us
Request: Request { id: RequestId(I32(219)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.sle\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(204)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2888us
Request: Request { id: RequestId(I32(220)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.slee\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(205)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3428us
Request: Request { id: RequestId(I32(221)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.sleep\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(206)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2927us
Request: Request { id: RequestId(I32(222)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.sleepN\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(207)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2911us
Request: Request { id: RequestId(I32(223)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.sleepNa\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(208)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3261us
Request: Request { id: RequestId(I32(224)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.sleepNan\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(209)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2698us
Request: Request { id: RequestId(I32(225)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.sleepNano\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(210)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3500us
Request: Request { id: RequestId(I32(226)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.sleepNanos\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(211)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4850us
Request: Request { id: RequestId(I32(227)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.sleepNanos(\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(212)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 99, char_start: 24, char_end: 25 }", line: 101, token: Token { t: EndOfStatement, line: 99, char_start: 24, char_end: 25 } }
Update time: 1193us
Request: Request { id: RequestId(I32(228)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.sleepNanos(1\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(213)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected comma or right paren, got Token { t: EndOfStatement, line: 99, char_start: 25, char_end: 26 } in function call", line: 101, token: Token { t: EndOfStatement, line: 99, char_start: 25, char_end: 26 } }
Update time: 820us
Request: Request { id: RequestId(I32(229)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(25), "line": Number(99)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(230)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    var startTime = std.time.nanos()\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(214)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2954us
Request: Request { id: RequestId(I32(231)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(232)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2907us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(216)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3043us
Request: Request { id: RequestId(I32(233)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(102)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(234)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2746us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(218)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3120us
Request: Request { id: RequestId(I32(235)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(92)}, "start": Object {"character": Number(0), "line": Number(46)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(236)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2819us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(220)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3148us
Request: Request { id: RequestId(I32(237)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    i\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(221)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 9426us
Request: Request { id: RequestId(I32(238)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(5), "line": Number(98)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(239)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(222)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 98, char_start: 6, char_end: 7 }", line: 100, token: Token { t: EndOfStatement, line: 98, char_start: 6, char_end: 7 } }
Update time: 1055us
Request: Request { id: RequestId(I32(240)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(223)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 98, char_start: 7, char_end: 8 }", line: 100, token: Token { t: EndOfStatement, line: 98, char_start: 7, char_end: 8 } }
Update time: 1033us
Request: Request { id: RequestId(I32(241)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(57)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if b\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(224)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"std\"), line: 99, char_start: 4, char_end: 7 }", line: 100, token: Token { t: Ident("std"), line: 99, char_start: 4, char_end: 7 } }
Update time: 1441us
Request: Request { id: RequestId(I32(242)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(8), "line": Number(98)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(243)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ba\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(225)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"std\"), line: 99, char_start: 4, char_end: 7 }", line: 100, token: Token { t: Ident("std"), line: 99, char_start: 4, char_end: 7 } }
Update time: 1289us
Request: Request { id: RequestId(I32(244)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if bal\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(226)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"std\"), line: 99, char_start: 4, char_end: 7 }", line: 100, token: Token { t: Ident("std"), line: 99, char_start: 4, char_end: 7 } }
Update time: 983us
Request: Request { id: RequestId(I32(245)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ball\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(227)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"std\"), line: 99, char_start: 4, char_end: 7 }", line: 100, token: Token { t: Ident("std"), line: 99, char_start: 4, char_end: 7 } }
Update time: 1086us
Request: Request { id: RequestId(I32(246)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballP\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(228)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"std\"), line: 99, char_start: 4, char_end: 7 }", line: 100, token: Token { t: Ident("std"), line: 99, char_start: 4, char_end: 7 } }
Update time: 1632us
Request: Request { id: RequestId(I32(247)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPo\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(229)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"std\"), line: 99, char_start: 4, char_end: 7 }", line: 100, token: Token { t: Ident("std"), line: 99, char_start: 4, char_end: 7 } }
Update time: 1699us
Request: Request { id: RequestId(I32(248)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(230)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"std\"), line: 99, char_start: 4, char_end: 7 }", line: 100, token: Token { t: Ident("std"), line: 99, char_start: 4, char_end: 7 } }
Update time: 1238us
Request: Request { id: RequestId(I32(249)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(231)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected identifier, got Token { t: EndOfStatement, line: 98, char_start: 15, char_end: 16 } on right side of '.'", line: 100, token: Token { t: EndOfStatement, line: 98, char_start: 15, char_end: 16 } }
Update time: 1276us
Request: Request { id: RequestId(I32(250)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(232)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"std\"), line: 99, char_start: 4, char_end: 7 }", line: 100, token: Token { t: Ident("std"), line: 99, char_start: 4, char_end: 7 } }
Update time: 1949us
Request: Request { id: RequestId(I32(251)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(16), "line": Number(98)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(252)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(233)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected left brace to start block, got Token { t: Ident(\"std\"), line: 99, char_start: 4, char_end: 7 }", line: 100, token: Token { t: Ident("std"), line: 99, char_start: 4, char_end: 7 } }
Update time: 917us
Request: Request { id: RequestId(I32(253)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(234)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 98, char_start: 18, char_end: 19 }", line: 100, token: Token { t: EndOfStatement, line: 98, char_start: 18, char_end: 19 } }
Update time: 986us
Request: Request { id: RequestId(I32(254)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >=\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(235)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 98, char_start: 19, char_end: 20 }", line: 100, token: Token { t: EndOfStatement, line: 98, char_start: 19, char_end: 20 } }
Update time: 2040us
Request: Request { id: RequestId(I32(255)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(103)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = -1\n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    }\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(236)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4088us
Request: Request { id: RequestId(I32(256)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(257)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = -1\n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(237)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3110us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3203us
Request: Request { id: RequestId(I32(258)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x \n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(239)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2969us
Request: Request { id: RequestId(I32(259)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x =\n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(240)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 99, char_start: 21, char_end: 22 }", line: 101, token: Token { t: EndOfStatement, line: 99, char_start: 21, char_end: 22 } }
Update time: 2116us
Request: Request { id: RequestId(I32(260)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = \n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(241)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 99, char_start: 22, char_end: 23 }", line: 101, token: Token { t: EndOfStatement, line: 99, char_start: 22, char_end: 23 } }
Update time: 900us
Request: Request { id: RequestId(I32(261)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = d\n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(242)}} }
Errors: [ReferenceError { name: "d", line: 99, char_start: 22, char_end: 23 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3380us
Request: Request { id: RequestId(I32(262)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(23), "line": Number(99)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(263)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = di\n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(243)}} }
Errors: [ReferenceError { name: "di", line: 99, char_start: 22, char_end: 24 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3859us
Request: Request { id: RequestId(I32(264)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = dir\n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(244)}} }
Errors: [ReferenceError { name: "dir", line: 99, char_start: 22, char_end: 25 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3180us
Request: Request { id: RequestId(I32(265)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = dire\n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(245)}} }
Errors: [ReferenceError { name: "dire", line: 99, char_start: 22, char_end: 26 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 4021us
Request: Request { id: RequestId(I32(266)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direc\n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(246)}} }
Errors: [ReferenceError { name: "direc", line: 99, char_start: 22, char_end: 27 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3141us
Request: Request { id: RequestId(I32(267)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direct\n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(247)}} }
Errors: [ReferenceError { name: "direct", line: 99, char_start: 22, char_end: 28 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2988us
Request: Request { id: RequestId(I32(268)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = directio\n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(249)}} }
Errors: [ReferenceError { name: "directio", line: 99, char_start: 22, char_end: 30 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 2957us
Request: Request { id: RequestId(I32(269)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction\n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(250)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3641us
Request: Request { id: RequestId(I32(270)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction.\n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(251)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected identifier, got Token { t: EndOfStatement, line: 99, char_start: 32, char_end: 33 } on right side of '.'", line: 101, token: Token { t: EndOfStatement, line: 99, char_start: 32, char_end: 33 } }
Update time: 1091us
Request: Request { id: RequestId(I32(271)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction.x\n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(252)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3026us
Request: Request { id: RequestId(I32(272)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(33), "line": Number(99)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(273)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = 1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(253)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3615us
Request: Request { id: RequestId(I32(274)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(38), "line": Number(99)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(275)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(276)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2995us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = \n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(255)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 101, char_start: 22, char_end: 23 }", line: 103, token: Token { t: EndOfStatement, line: 101, char_start: 22, char_end: 23 } }
Update time: 949us
Request: Request { id: RequestId(I32(277)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = d\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(256)}} }
Errors: [ReferenceError { name: "d", line: 101, char_start: 22, char_end: 23 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3153us
Request: Request { id: RequestId(I32(278)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(23), "line": Number(101)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(279)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = di\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(257)}} }
Errors: [ReferenceError { name: "di", line: 101, char_start: 22, char_end: 24 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3138us
Request: Request { id: RequestId(I32(280)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = dir\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(258)}} }
Errors: [ReferenceError { name: "dir", line: 101, char_start: 22, char_end: 25 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3075us
Request: Request { id: RequestId(I32(281)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(259)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3115us
Request: Request { id: RequestId(I32(282)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(38), "line": Number(101)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(283)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(107)}, "start": Object {"character": Number(0), "line": Number(61)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(284)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3545us
Request: Request { id: RequestId(I32(285)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3586us
Request: Request { id: RequestId(I32(286)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3420us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(261)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3242us
Request: Request { id: RequestId(I32(287)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(108)}, "start": Object {"character": Number(0), "line": Number(62)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    i\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(262)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3422us
Request: Request { id: RequestId(I32(288)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(5), "line": Number(103)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(289)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(108)}, "start": Object {"character": Number(0), "line": Number(62)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(263)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: EndOfStatement, line: 103, char_start: 6, char_end: 7 }", line: 105, token: Token { t: EndOfStatement, line: 103, char_start: 6, char_end: 7 } }
Update time: 1011us
Request: Request { id: RequestId(I32(290)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(108)}, "start": Object {"character": Number(0), "line": Number(62)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if ballPos.y >= w {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    }\n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(264)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3876us
Request: Request { id: RequestId(I32(291)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(292)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 45\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if ballPos.y >= w {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(265)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4697us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3741us
Request: Request { id: RequestId(I32(293)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(294)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3623us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if ballPos.y >= w {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(267)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4972us
Request: Request { id: RequestId(I32(295)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(93)}, "start": Object {"character": Number(0), "line": Number(47)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(296)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3668us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if ballPos.y > w {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(269)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3738us
Request: Request { id: RequestId(I32(297)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(298)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4038us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if ballPos.y > w {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(271)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3722us
Request: Request { id: RequestId(I32(299)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(300)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3567us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if ballPos.y > w {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(273)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3847us
Request: Request { id: RequestId(I32(301)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > h {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if ballPos.y > w {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(274)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4476us
Request: Request { id: RequestId(I32(302)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(303)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3703us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if ballPos.y > w {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(276)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3599us
Request: Request { id: RequestId(I32(304)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(277)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3638us
Request: Request { id: RequestId(I32(305)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(306)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3579us
Request: Request { id: RequestId(I32(307)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3826us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        \n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(279)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 10384us
Request: Request { id: RequestId(I32(308)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        b\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(280)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 5177us
Request: Request { id: RequestId(I32(309)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(9), "line": Number(100)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(310)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ba\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(281)}} }
Errors: [ReferenceError { name: "ba", line: 100, char_start: 8, char_end: 10 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3884us
Request: Request { id: RequestId(I32(311)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        bal\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(282)}} }
Errors: [ReferenceError { name: "bal", line: 100, char_start: 8, char_end: 11 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 5105us
Request: Request { id: RequestId(I32(312)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ball\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(283)}} }
Errors: [ReferenceError { name: "ball", line: 100, char_start: 8, char_end: 12 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3629us
Request: Request { id: RequestId(I32(313)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(284)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3922us
Request: Request { id: RequestId(I32(314)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(25), "line": Number(100)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(315)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(316)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3749us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        \n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(286)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4242us
Request: Request { id: RequestId(I32(317)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        b\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(287)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4742us
Request: Request { id: RequestId(I32(318)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(9), "line": Number(103)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(319)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ba\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(288)}} }
Errors: [ReferenceError { name: "ba", line: 103, char_start: 8, char_end: 10 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 5055us
Request: Request { id: RequestId(I32(320)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(289)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3967us
Request: Request { id: RequestId(I32(321)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(21), "line": Number(103)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(322)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(323)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3757us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        \n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(291)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4250us
Request: Request { id: RequestId(I32(324)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(115)}, "start": Object {"character": Number(0), "line": Number(69)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        b\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(292)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 5218us
Request: Request { id: RequestId(I32(325)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(9), "line": Number(107)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(326)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(115)}, "start": Object {"character": Number(0), "line": Number(69)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        ba\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(293)}} }
Errors: [ReferenceError { name: "ba", line: 107, char_start: 8, char_end: 10 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 3822us
Request: Request { id: RequestId(I32(327)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(115)}, "start": Object {"character": Number(0), "line": Number(69)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        ballPos.y = h - 1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(294)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4102us
Request: Request { id: RequestId(I32(328)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(25), "line": Number(107)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(329)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(115)}, "start": Object {"character": Number(0), "line": Number(69)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(330)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3844us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        ballPos.y = h - 1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        \n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(296)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 5674us
Request: Request { id: RequestId(I32(331)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        ballPos.y = h - 1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        b\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(297)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 5250us
Request: Request { id: RequestId(I32(332)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(9), "line": Number(110)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(333)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        ballPos.y = h - 1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ba\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(298)}} }
Errors: [ReferenceError { name: "ba", line: 110, char_start: 8, char_end: 10 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 4314us
Request: Request { id: RequestId(I32(334)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        ballPos.y = h - 1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(299)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3929us
Request: Request { id: RequestId(I32(335)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(21), "line": Number(110)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(336)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(337)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 5197us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        ballPos.y = h- 1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(301)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4189us
Request: Request { id: RequestId(I32(338)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        ballPos.y = h 1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(302)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected newline after statement \"ballPos.y = h\", instead got Token { t: Number(1.0), line: 107, char_start: 22, char_end: 23 }", line: 108, token: Token { t: Number(1.0), line: 107, char_start: 22, char_end: 23 } }
Update time: 1101us
Request: Request { id: RequestId(I32(339)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        ballPos.y = h1\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(303)}} }
Errors: [ReferenceError { name: "h1", line: 107, char_start: 20, char_end: 22 }]
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 1 reference errors
Update time: 4517us
Request: Request { id: RequestId(I32(340)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w - 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(304)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4385us
Request: Request { id: RequestId(I32(341)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(342)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4076us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w  1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(306)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected newline after statement \"ballPos.x = w\", instead got Token { t: Number(1.0), line: 100, char_start: 23, char_end: 24 }", line: 101, token: Token { t: Number(1.0), line: 100, char_start: 23, char_end: 24 } }
Update time: 1415us
Request: Request { id: RequestId(I32(343)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w 1\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(307)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected newline after statement \"ballPos.x = w\", instead got Token { t: Number(1.0), line: 100, char_start: 22, char_end: 23 }", line: 101, token: Token { t: Number(1.0), line: 100, char_start: 22, char_end: 23 } }
Update time: 909us
Request: Request { id: RequestId(I32(344)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w \n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(308)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4213us
Request: Request { id: RequestId(I32(345)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(346)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x > w {\n        direction.x = direction.x * -1\n        ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(309)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4398us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3873us
Request: Request { id: RequestId(I32(347)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n        ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y > h {\n        direction.y = direction.y * -1\n        ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(311)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4961us
Request: Request { id: RequestId(I32(348)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(349)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 5439us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n        ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y >= h {\n        direction.y = direction.y * -1\n        ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(313)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 5124us
Request: Request { id: RequestId(I32(350)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(351)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4174us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n        // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y >= h {\n        direction.y = direction.y * -1\n        ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(315)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4190us
Request: Request { id: RequestId(I32(352)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n        // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y >= h {\n        direction.y = direction.y * -1\n        // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(316)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4461us
Request: Request { id: RequestId(I32(353)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(354)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n        // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y >= h {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(317)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4613us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y >= h {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(318)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3836us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4182us
Request: Request { id: RequestId(I32(355)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(356)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        ballPos.x = 0\n    } \n    if ballPos.y >= h {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(320)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3977us
Request: Request { id: RequestId(I32(357)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        // ballPos.x = 0\n    } \n    if ballPos.y >= h {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n        // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(321)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3852us
Request: Request { id: RequestId(I32(358)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(359)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n        // ballPos.x = 0\n    } \n    if ballPos.y >= h {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(322)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3963us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(323)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3854us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3877us
Request: Request { id: RequestId(I32(360)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(361)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = 0\n    } \n    std.time.sleepNanos(10000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(325)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4044us
Request: Request { id: RequestId(I32(362)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(363)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3811us
Request: Request { id: RequestId(I32(364)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3854us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(327)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3870us
Request: Request { id: RequestId(I32(365)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(26), "line": Number(112)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(366)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(367)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3755us
Request: Request { id: RequestId(I32(368)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4067us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h  {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(329)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4467us
Request: Request { id: RequestId(I32(369)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(330)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 5417us
Request: Request { id: RequestId(I32(370)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h |{\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(331)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: LexerError { msg: "Invalid character: |", line: 106, token: Token { t: Ident("|"), line: 105, char_start: 22, char_end: 23 } }
Update time: 1847us
Request: Request { id: RequestId(I32(371)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h ||{\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(332)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected =, got Token { t: Dot, line: 106, char_start: 17, char_end: 18 } in object literal", line: 107, token: Token { t: Dot, line: 106, char_start: 17, char_end: 18 } }
Update time: 1282us
Request: Request { id: RequestId(I32(372)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h || {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(333)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected =, got Token { t: Dot, line: 106, char_start: 17, char_end: 18 } in object literal", line: 107, token: Token { t: Dot, line: 106, char_start: 17, char_end: 18 } }
Update time: 1028us
Request: Request { id: RequestId(I32(373)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h || a{\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(334)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4013us
Request: Request { id: RequestId(I32(374)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(26), "line": Number(105)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(375)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h || {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(335)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected =, got Token { t: Dot, line: 106, char_start: 17, char_end: 18 } in object literal", line: 107, token: Token { t: Dot, line: 106, char_start: 17, char_end: 18 } }
Update time: 1421us
Request: Request { id: RequestId(I32(376)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h || ballPos.y < 0{\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(336)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4083us
Request: Request { id: RequestId(I32(377)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(378)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    } elseif ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(337)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4620us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3947us
Request: Request { id: RequestId(I32(379)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(116)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n        direction.y = direction.y * -1\n    // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(339)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4116us
Request: Request { id: RequestId(I32(380)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(115)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    // ballPos.y = 0\n    } \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(340)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3833us
Request: Request { id: RequestId(I32(381)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(114)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(382)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n    // ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(341)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3752us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    } elseif ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(342)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3646us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3522us
Request: Request { id: RequestId(I32(383)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(114)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(384)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(114)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n        direction.x = direction.x * -1\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(344)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 7185us
Request: Request { id: RequestId(I32(385)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(113)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(345)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3733us
Request: Request { id: RequestId(I32(386)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w  {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(346)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 5141us
Request: Request { id: RequestId(I32(387)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    // ballPos.x = 0\n    } \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(347)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3471us
Request: Request { id: RequestId(I32(388)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(389)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x < 0 {\n        direction.x = direction.x * -1\n    // ballPos.x = w\n    // ballPos.x = 0\n    }  \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(348)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3628us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x < 0 {\n        direction.x = direction.x * -1\n// ballPos.x = w\n    // ballPos.x = 0\n    }  \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(349)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3436us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3545us
Request: Request { id: RequestId(I32(390)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(391)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x < 0 {\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(351)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 10341us
Request: Request { id: RequestId(I32(392)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(110)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x < 0 {\n// ballPos.x = w\n    // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(352)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3746us
Request: Request { id: RequestId(I32(393)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(394)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x < 0 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(353)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3451us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3345us
Request: Request { id: RequestId(I32(395)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(396)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3595us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x < 0 {\n // ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(355)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3798us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x < 0 {\n    // ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(358)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3362us
Request: Request { id: RequestId(I32(397)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(398)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x < 0 {\n     // ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(359)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4292us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x < 0 {\n        // ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(362)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3662us
Request: Request { id: RequestId(I32(399)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(400)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(401)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x < 0 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(363)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3528us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3626us
Request: Request { id: RequestId(I32(402)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(403)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3586us
Request: Request { id: RequestId(I32(404)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3284us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x <> 0 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(365)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: OpGt, line: 98, char_start: 36, char_end: 37 }", line: 99, token: Token { t: OpGt, line: 98, char_start: 36, char_end: 37 } }
Update time: 1324us
Request: Request { id: RequestId(I32(405)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x < 0 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(366)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3319us
Request: Request { id: RequestId(I32(406)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x <= 0 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y < 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(367)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4520us
Request: Request { id: RequestId(I32(407)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(408)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3510us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x <= 0 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(369)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3718us
Request: Request { id: RequestId(I32(409)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(410)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3515us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(371)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4513us
Request: Request { id: RequestId(I32(411)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(70)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(412)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3464us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(373)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 9914us
Request: Request { id: RequestId(I32(413)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(109)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(10 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(374)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected comma or right paren, got Token { t: Number(0.0), line: 71, char_start: 21, char_end: 22 } in function call", line: 72, token: Token { t: Number(0.0), line: 71, char_start: 21, char_end: 22 } }
Update time: 1216us
Request: Request { id: RequestId(I32(414)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(109)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(375)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4220us
Request: Request { id: RequestId(I32(415)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(109)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(377)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4239us
Request: Request { id: RequestId(I32(416)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(109)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(417)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3475us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1t\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(379)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: LexerError { msg: "Lexer error at line 72: Invalid number 1t, note: number is in base 10", line: 72, token: Token { t: Ident("1"), line: 71, char_start: 21, char_end: 22 } }
Update time: 876us
Request: Request { id: RequestId(I32(418)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(109)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1\u{1a}\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(380)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: LexerError { msg: "Invalid character: \u{1a}", line: 72, token: Token { t: Ident("\u{1a}"), line: 71, char_start: 22, char_end: 23 } }
Update time: 1078us
Request: Request { id: RequestId(I32(419)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(109)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1t\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(381)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: LexerError { msg: "Lexer error at line 72: Invalid number 1t, note: number is in base 10", line: 72, token: Token { t: Ident("1"), line: 71, char_start: 21, char_end: 22 } }
Update time: 919us
Request: Request { id: RequestId(I32(420)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(109)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(383)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3898us
Request: Request { id: RequestId(I32(421)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(109)}, "start": Object {"character": Number(0), "line": Number(63)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w- || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(385)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: OpOrOr, line: 98, char_start: 23, char_end: 25 }", line: 99, token: Token { t: OpOrOr, line: 98, char_start: 23, char_end: 25 } }
Update time: 2030us
Request: Request { id: RequestId(I32(422)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(22), "line": Number(98)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(423)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(110)}, "start": Object {"character": Number(0), "line": Number(64)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w-1 || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(386)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 5002us
Request: Request { id: RequestId(I32(424)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(110)}, "start": Object {"character": Number(0), "line": Number(64)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(425)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w - 1 || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(387)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4157us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3478us
Request: Request { id: RequestId(I32(426)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(110)}, "start": Object {"character": Number(0), "line": Number(64)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w - 1 || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h -|| ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(389)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected an expression, instead got Token { t: OpOrOr, line: 103, char_start: 23, char_end: 25 }", line: 104, token: Token { t: OpOrOr, line: 103, char_start: 23, char_end: 25 } }
Update time: 1815us
Request: Request { id: RequestId(I32(427)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w - 1 || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h -1|| ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(390)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3678us
Request: Request { id: RequestId(I32(428)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(24), "line": Number(103)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(429)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(430)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w - 1 || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h - 1 || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(391)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3416us
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3482us
Request: Request { id: RequestId(I32(431)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 1000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w - 1 || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h - 1 || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(393)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4352us
Request: Request { id: RequestId(I32(432)), method: "textDocument/completion", params: Object {"context": Object {"triggerKind": Number(1)}, "position": Object {"character": Number(14), "line": Number(91)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(433)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 10000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w - 1 || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h - 1 || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(394)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3917us
Request: Request { id: RequestId(I32(434)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w - 1 || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h - 1 || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(100000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(395)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4001us
Request: Request { id: RequestId(I32(435)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(436)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3389us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w - 1 || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h - 1 || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(00000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(397)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3702us
Request: Request { id: RequestId(I32(437)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w - 1 || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h - 1 || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(50000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(398)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 5232us
Request: Request { id: RequestId(I32(438)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w - 1 || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h - 1 || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(0000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(399)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4207us
Request: Request { id: RequestId(I32(439)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\nprintScreen(arr2)\ni = 0\nwhile i < 100000 {\n    ballPos.x += direction.x\n    ballPos.y += direction.y\n    if isOnScreen(ballPos) {\n        arr2[ballPos.x][ballPos.y] = \"O\"\n        printScreen(arr2)\n    }  \n    if ballPos.x >= w - 1 || ballPos.x <= 1 {\n// ballPos.x = w\n        // ballPos.x = 0\n        direction.x = direction.x * -1\n    }  \n    if ballPos.y >= h - 1 || ballPos.y <= 0 {\n        direction.y = direction.y * -1\n// ballPos.y = h\n    // ballPos.y = 0\n    }  \n    std.time.sleepNanos(50000000)\n    i += 1\n}\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(400)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3418us
Request: Request { id: RequestId(I32(440)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(441)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4764us
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\n// var sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 46\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(1, 1)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= h {\n        return false\n    } elseif pos.x >= w {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\n// printScreen(arr2)\n// i = 0\n// while i < 100000 {\n//     ballPos.x += direction.x\n//     ballPos.y += direction.y\n//     if isOnScreen(ballPos) {\n//         arr2[ballPos.x][ballPos.y] = \"O\"\n//         printScreen(arr2)\n//     }  \n//     if ballPos.x >= w - 1 || ballPos.x <= 1 {\n// // ballPos.x = w\n//         // ballPos.x = 0\n//         direction.x = direction.x * -1\n//     }  \n//     if ballPos.y >= h - 1 || ballPos.y <= 0 {\n//         direction.y = direction.y * -1\n// // ballPos.y = h\n//     // ballPos.y = 0\n//     }  \n//     std.time.sleepNanos(50000000)\n//     i += 1\n// }\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(403)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 4981us
Request: Request { id: RequestId(I32(442)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(112)}, "start": Object {"character": Number(0), "line": Number(66)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(443)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2626us
