Started server
Capabilities: Object {"completionProvider": Object {"completionItem": Object {"labelDetailsSupport": Bool(true)}, "resolveProvider": Bool(true), "triggerCharacters": Array [], "workDoneProgress": Bool(true)}, "definitionProvider": Bool(true), "diagnosticProvider": Object {"identifier": String("maple"), "interFileDependencies": Bool(true), "workDoneProgress": Bool(true), "workspaceDiagnostics": Bool(true)}, "documentFormattingProvider": Bool(true), "hoverProvider": Bool(true), "textDocumentSync": Number(1)}
Notification: Notification { method: "textDocument/didOpen", params: Object {"textDocument": Object {"languageId": String("maple"), "text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\nvar sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n"), "uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(0)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2412us
Request: Request { id: RequestId(I32(2)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(70)}, "start": Object {"character": Number(0), "line": Number(24)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\nvar sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } e\n    lseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(203)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected newline after statement \"lseif\", instead got Token { t: Ident(\"pos\"), line: 79, char_start: 10, char_end: 13 }", line: 80, token: Token { t: Ident("pos"), line: 79, char_start: 10, char_end: 13 } }
Update time: 1101us
Request: Request { id: RequestId(I32(3)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(90)}, "start": Object {"character": Number(0), "line": Number(44)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\nvar sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } e\n\n    lseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(204)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Expected newline after statement \"lseif\", instead got Token { t: Ident(\"pos\"), line: 80, char_start: 10, char_end: 13 }", line: 81, token: Token { t: Ident("pos"), line: 80, char_start: 10, char_end: 13 } }
Update time: 1353us
Request: Request { id: RequestId(I32(4)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(90)}, "start": Object {"character": Number(0), "line": Number(44)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\nvar sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(205)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3321us
Request: Request { id: RequestId(I32(5)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(90)}, "start": Object {"character": Number(0), "line": Number(44)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\nvar sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } \n    elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(207)}} }
Error: "Error parsing file"
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
Error: ParserError { msg: "Unexpected token Token { t: Elseif, line: 79, char_start: 4, char_end: 10 }", line: 80, token: Token { t: Elseif, line: 79, char_start: 4, char_end: 10 } }
Update time: 798us
Request: Request { id: RequestId(I32(6)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(90)}, "start": Object {"character": Number(0), "line": Number(44)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\nvar sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(208)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3514us
Request: Request { id: RequestId(I32(7)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(90)}, "start": Object {"character": Number(0), "line": Number(44)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(8)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2472us
mpl"), "version": Number(207)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2499us
Request: Request { id: RequestId(I32(10)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(90)}, "start": Object {"character": Number(0), "line": Number(44)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Notification: Notification { method: "textDocument/didChange", params: Object {"contentChanges": Array [Object {"text": String("var startNanos = std.time.nanos()\nvar sdfsfd = import maple2.mpl\nvar sdfsfd = {}\n\nsdfsfd.x = 1\n\n\nvar a = 1\n\nvar b = 0\n\nfn yeet (b) {\n    b += 1\n}\n\nyeet(b)\n\nb = {\n    a = 0,\n    b = fn (a) {\n        return a + 1\n    },\n    a = fn () {\n        return 1\n    },\n    1.1 = 2\n}\n\n\nb.x = 1\n\na += 1\nb = b[1.1]\nb = [1, 2, 3, 4, 5]\nb = b[4 - 1]\nb = -4\nb = !!true\nfn printScreen (arr) {\n    var i = 0\n    var printed = \"\"\n    while i < std.arr.len(arr) {\n        // sdf\n        var subArr = arr[i]\n        var j = 0\n        while j < std.arr.len(subArr) {\n            printed = printed + subArr[j]\n            j += 1\n        }\n        printed = printed + \"\\n\"\n        i += 1\n    }\n    std.io.print(printed)\n}\nvar i = 0\nvar spaces = \"\"\nvar arr2 = []\nvar h = 71\nvar w = 35\nwhile std.arr.len(arr2) < w {\n    var subArr = []\n    while std.arr.len(subArr) < h {\n        subArr[std.arr.len(subArr)] = \" \"\n    }\n    arr2[std.arr.len(arr2)] = subArr\n}\nfn vec (x, y) {\n    return {\n        x = x,\n        y = y\n    }\n}\nvar ballPos = vec(0, 0)\nvar direction = vec(1, 1)\n\nvar acc = vec(0, 1)\nfn isOnScreen (pos) {\n    if pos.x < 0 {\n        return false\n    } elseif pos.y < 0 {\n        return false\n    } elseif pos.y >= w {\n        return false\n    } elseif pos.x >= h {\n        return false\n    } else {\n        return true\n    }\n}\nvar time = std.time.nanos() - startNanos\n// std.io.print(\"Time: \" + toStr(time / 1000000) + \"ms\\n\")\n")}], "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl"), "version": Number(208)}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 3620us
Request: Request { id: RequestId(I32(11)), method: "textDocument/diagnostic", params: Object {"range": Object {"end": Object {"character": Number(0), "line": Number(90)}, "start": Object {"character": Number(0), "line": Number(44)}}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Request: Request { id: RequestId(I32(12)), method: "textDocument/formatting", params: Object {"options": Object {"insertSpaces": Bool(true), "tabSize": Number(4)}, "textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Formatting
Notification: Notification { method: "textDocument/didSave", params: Object {"textDocument": Object {"uri": String("file:///home/cwood/projects/maple/rust/maple.mpl")}} }
Errors: []
Publishing diagnostics for file:///home/cwood/projects/maple/rust/maple.mpl
There are 0 reference errors
Update time: 2614us
