diff --git a/rust/maple.mpl b/rust/maple.mpl
index f98726b..490eee2 100755
--- a/rust/maple.mpl
+++ b/rust/maple.mpl
@@ -57,47 +57,70 @@ std.io.println(sdfsfd.x)
 var i = 0 
 var spaces = ""
 var arr2 = []
-while std.arr.len(arr2) < 38 {
+var h = 71
+var w = 35
+while std.arr.len(arr2) < w {
     var subArr = []
-    while std.arr.len(subArr) < 71 {
+    while std.arr.len(subArr) < h {
         subArr[std.arr.len(subArr)] = " "
     }
     arr2[std.arr.len(arr2)] = subArr
 }
-var ballPos = {
-    x = 0,
-    y = 0
+fn vec(x, y) {
+    return {
+        x = x,
+        y = y
+    }
 }
-var direction = {
-    x = 1,
-    y = 1
+var ballPos = vec(0, 0)
+var direction = vec(1, 1)
+var acc = vec(0, 1)
+fn isOnScreen(pos) {
+    if pos.x < 0{
+        return false
+    }
+    if pos.y < 0{
+        return false
+    }
+    if pos.y >= w {
+        return false
+    }
+    if pos.x >= h {
+        return false
+    }
+    return true
 }
 while i < 100000000 {
     var start = std.time.nanos()
-    arr2[ballPos.y][ballPos.x] = " "
-        spaces = spaces + " "
-    printScreen(arr2)
-    arr2[ballPos.y][ballPos.x] = "-"
-    ballPos.x = ballPos.x + direction.x
-    ballPos.y = ballPos.y + direction.y
-    if ballPos.x >= std.arr.len(arr2[0]) {
-        direction.x = -1
-        ballPos.x = std.arr.len(arr2[0]) - 1
+    // arr2[ballPos.y][ballPos.x] = " "
+    if isOnScreen(ballPos) {
+        arr2[ballPos.y][ballPos.x] = "#"
+        printScreen(arr2)
+    }
+        ballPos.x = ballPos.x + direction.x
+        ballPos.y = ballPos.y + direction.y
+    direction.x += acc.x
+    direction.y += acc.y
+    if ballPos.x >= h {
+        direction.x = -direction.x
+        // ballPos.x = w - 1
     }
     if ballPos.x < 0 {
         direction.x = 1
-        ballPos.x = 0
+        // ballPos.x = 0
     }
-    if ballPos.y >= std.arr.len(arr2) {
-        direction.y = -1
-        ballPos.y = std.arr.len(arr2) - 1
+    if ballPos.y >= w {
+        direction.y = std.math.round(-direction.y * 0.75)
+        // ballPos.y = h - 1
     }
     if ballPos.y < 0 {
         direction.y = 1
-        ballPos.y = 0
+        // ballPos.y = 0
         // break
     }
     i += 1
-    while std.time.nanos() - start < 10000000 {
-        }
+    var time = std.time.nanos() - start
+    std.time.sleepNanos(100000000 - time)
+    // while std.time.nanos() - start < 10000000 {
+    // }
 }
